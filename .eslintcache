[{"/home/rahul/Desktop/projects/GoDutch/src/App.js":"1","/home/rahul/Desktop/projects/GoDutch/src/Components/AppDashboard.js":"2","/home/rahul/Desktop/projects/GoDutch/src/Components/ConfirmFriends.js":"3","/home/rahul/Desktop/projects/GoDutch/src/Components/WrongInput.js":"4","/home/rahul/Desktop/projects/GoDutch/src/Components/UserBalance.js":"5","/home/rahul/Desktop/projects/GoDutch/src/index.js":"6","/home/rahul/Desktop/projects/GoDutch/src/Components/FilterDialog.js":"7","/home/rahul/Desktop/projects/GoDutch/src/firebase/firebase.js":"8","/home/rahul/Desktop/projects/GoDutch/src/reportWebVitals.js":"9","/home/rahul/Desktop/projects/GoDutch/src/Components/FriendsTab.js":"10","/home/rahul/Desktop/projects/GoDutch/src/Components/AddCountryCode.js":"11","/home/rahul/Desktop/projects/GoDutch/src/Components/GroupsTab.js":"12","/home/rahul/Desktop/projects/GoDutch/src/Components/FriendsList.js":"13","/home/rahul/Desktop/projects/GoDutch/src/Components/AddExpense.js":"14","/home/rahul/Desktop/projects/GoDutch/src/Components/AddFriend.js":"15","/home/rahul/Desktop/projects/GoDutch/src/Components/OptionsDialog.js":"16","/home/rahul/Desktop/projects/GoDutch/src/Components/EditFriendDetails.js":"17","/home/rahul/Desktop/projects/GoDutch/src/Components/NavBar.js":"18","/home/rahul/Desktop/projects/GoDutch/src/Components/AddMoreFriends.js":"19","/home/rahul/Desktop/projects/GoDutch/src/Components/AddDetails.js":"20","/home/rahul/Desktop/projects/GoDutch/src/Components/ThreeDotsPopover.js":"21","/home/rahul/Desktop/projects/GoDutch/src/Components/WhoPaidDialog.js":"22","/home/rahul/Desktop/projects/GoDutch/src/Components/Header.js":"23","/home/rahul/Desktop/projects/GoDutch/src/Components/ChoosePayer.js":"24","/home/rahul/Desktop/projects/GoDutch/src/Components/AmountPaidByPerPerson.js":"25","/home/rahul/Desktop/projects/GoDutch/src/Components/PerPersonShareDialog.js":"26","/home/rahul/Desktop/projects/GoDutch/src/Components/SplitEqually.js":"27","/home/rahul/Desktop/projects/GoDutch/src/Components/PaidByWarning.js":"28"},{"size":190,"mtime":1608434691683,"results":"29","hashOfConfig":"30"},{"size":12932,"mtime":1611551332159,"results":"31","hashOfConfig":"30"},{"size":6175,"mtime":1608434691683,"results":"32","hashOfConfig":"30"},{"size":1394,"mtime":1608434691687,"results":"33","hashOfConfig":"30"},{"size":999,"mtime":1608434691687,"results":"34","hashOfConfig":"30"},{"size":486,"mtime":1609484607692,"results":"35","hashOfConfig":"30"},{"size":1798,"mtime":1608434691687,"results":"36","hashOfConfig":"30"},{"size":521,"mtime":1609501140363,"results":"37","hashOfConfig":"30"},{"size":362,"mtime":1608434691687,"results":"38","hashOfConfig":"30"},{"size":2629,"mtime":1609913625849,"results":"39","hashOfConfig":"30"},{"size":2349,"mtime":1608434691683,"results":"40","hashOfConfig":"30"},{"size":1805,"mtime":1608434691687,"results":"41","hashOfConfig":"30"},{"size":1496,"mtime":1611671353331,"results":"42","hashOfConfig":"30"},{"size":14861,"mtime":1614369439027,"results":"43","hashOfConfig":"30"},{"size":3081,"mtime":1608434691683,"results":"44","hashOfConfig":"30"},{"size":6013,"mtime":1608434691687,"results":"45","hashOfConfig":"30"},{"size":6894,"mtime":1608434691683,"results":"46","hashOfConfig":"30"},{"size":1489,"mtime":1608434691687,"results":"47","hashOfConfig":"30"},{"size":4220,"mtime":1608434691683,"results":"48","hashOfConfig":"30"},{"size":5342,"mtime":1608434691683,"results":"49","hashOfConfig":"30"},{"size":1832,"mtime":1608434691687,"results":"50","hashOfConfig":"30"},{"size":2601,"mtime":1612009316621,"results":"51","hashOfConfig":"30"},{"size":1275,"mtime":1608434691687,"results":"52","hashOfConfig":"30"},{"size":1963,"mtime":1612533516492,"results":"53","hashOfConfig":"30"},{"size":5198,"mtime":1614370981709,"results":"54","hashOfConfig":"30"},{"size":3619,"mtime":1612848774145,"results":"55","hashOfConfig":"30"},{"size":3162,"mtime":1614450059013,"results":"56","hashOfConfig":"30"},{"size":1269,"mtime":1614371259950,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"nowjuc",{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"67"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"60"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rahul/Desktop/projects/GoDutch/src/App.js",[],["129","130"],"/home/rahul/Desktop/projects/GoDutch/src/Components/AppDashboard.js",["131","132"],"import React from \"react\";\n\nimport AddCountryCode from \"./AddCountryCode\";\nimport AddFriend from \"./AddFriend\";\nimport AddDetails from \"./AddDetails\";\nimport AddExpense from \"./AddExpense\";\nimport AddMoreFriends from \"./AddMoreFriends\";\nimport ConfirmFriends from \"./ConfirmFriends\";\nimport EditFriendDetails from \"./EditFriendDetails\";\nimport Header from \"./Header\";\nimport NavBar from \"./NavBar\";\nimport OptionsDialog from \"./OptionsDialog\";\nimport ThreeDotsPopover from \"./ThreeDotsPopover\";\nimport WrongInput from \"./WrongInput\";\n\nimport firebase from \"../firebase/firebase\";\n\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst addExpenseButtonStyles = {\n  button: {\n    marginLeft: \".5rem\",\n    minWidth: \"50px\",\n    height: \"50px\",\n    color: \"#f2105a\",\n    fontSize: \"30px !important\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    bottom: \"5%\",\n    right: \"5%\",\n  },\n};\n\nfunction AddExpenseButtonComp(props) {\n  const { classes, toggleAddExpenseDialog } = props;\n  return (\n    <div>\n      <Tooltip title={props.tooltip}>\n        <AddCircleIcon\n          onClick={toggleAddExpenseDialog}\n          className={classes.button}\n        />\n      </Tooltip>\n    </div>\n  );\n}\n\nconst AddExpenseButton = withStyles(addExpenseButtonStyles)(\n  AddExpenseButtonComp\n);\n\nexport default class AppDashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      optionsDialog: false,\n      threeDotsDialog: false,\n      addFriendDialog: false,\n      addDetailsDialog: false,\n      wrongInputDialog: false,\n      addMoreFriendsDialog: false,\n      confirmFriendsDialog: false,\n      addCountryCode: false,\n      editFriendDetailsDialog: false,\n      addExpenseDialog: false,\n\n      anchorEl: false,\n\n      addFriend: false,\n\n      currentFriend: {\n        name: \"\",\n        number: { country: \"IN\", number: \"\", dialCode: \"91\" },\n        email: \"\",\n        key: \"\",\n        balance:\"\"\n      },\n      friendsToAdd: [],\n      editFriendDetails: {\n        name: \"\",\n        number: { country: \"IN\", number: \"\", dialCode: \"91\" },\n        email: \"\",\n        key: \"\",\n        balance:\"\"\n      },\n      friendsList: [],\n\n      openFriends: true,\n      openGroups: false,\n      openActivity: false,\n    };\n  }\n\n  handle3DotsClose = () => {\n    this.setState({\n      anchorEl: false,\n      threeDotsDialog: !this.state.threeDotsDialog,\n    });\n  };\n\n  toggleOptionsDialog = () =>\n    this.setState({ optionsDialog: !this.state.optionsDialog });\n\n  toggle3DotsDialog = (event) => {\n    this.setState({\n      anchorEl: event.currentTarget,\n      threeDotsDialog: !this.state.threeDotsDialog,\n    });\n  };\n\n  toggleThreeDots = () => {\n    this.setState({\n      addFriendDialog: !this.state.addFriendDialog,\n      threeDotsDialog: !this.state.threeDotsDialog,\n    });\n  };\n\n  toggleAddFriend = () => {\n    this.setState({ addFriendDialog: !this.state.addFriendDialog });\n  };\n\n  toggleAddDetails = () => {\n    this.setState({ addDetailsDialog: !this.state.addDetailsDialog });\n  };\n\n  handleBackButton = () => {\n    this.setState({\n      threeDotsDialog: false,\n      addFriendDialog: false,\n      addDetailsDialog: false,\n      addMoreFriendsDialog: false,\n      currentFriend: {\n        name: \"\",\n        number: { country: \"IN\", number: \"\" },\n        email: \"\",\n        key: \"\",\n      },\n      friendsToAdd: [],\n    });\n  };\n\n  handleCurrentFriend = (currentFriendInput, dateForKey, currentWindow) => {\n    let isNumber = /^[1-9]\\d+$/.test(currentFriendInput);\n    let isEmail = currentFriendInput.includes(\"@\");\n    switch (currentWindow) {\n      case \"AddFriend\":\n        setTimeout(\n          () => this.setState({ addFriendDialog: !this.state.addFriendDialog }),\n          200\n        );\n\n        break;\n      case \"AddMoreFriends\":\n        this.setState({\n          addMoreFriendsDialog: !this.state.addMoreFriendsDialog,\n        });\n        break;\n    }\n    if (isNumber) {\n      this.setState({\n        currentFriend: {\n          ...this.state.currentFriend,\n          number: {\n            country: \"IN\",\n            number: currentFriendInput,\n            dialCode: \"+91\",\n          },\n          key: dateForKey,\n        },\n        addDetailsDialog: !this.state.addDetailsDialog,\n      });\n    } else if (isEmail) {\n      this.setState({\n        currentFriend: {\n          ...this.state.currentFriend,\n          email: currentFriendInput,\n          key: dateForKey,\n        },\n        addDetailsDialog: !this.state.addDetailsDialog,\n      });\n    } else {\n      this.setState({\n        currentFriend: {\n          ...this.state.currentFriend,\n          key: dateForKey,\n          name: currentFriendInput,\n        },\n        addDetailsDialog: !this.state.addDetailsDialog,\n      });\n    }\n  };\n\n  toggleWrongInput = () =>\n    this.setState({ wrongInputDialog: !this.state.wrongInputDialog });\n\n  toggleAddMoreFriends = (currentFriend) =>\n    this.setState({\n      addMoreFriendsDialog: !this.state.addMoreFriendsDialog,\n      friendsToAdd: [],\n    });\n\n  toggleAddExpenseDialog = () => {\n    this.setState({ addExpenseDialog: !this.state.addExpenseDialog });\n  };\n\n  handleAddMoreFriends = (currentFriend) =>\n    this.setState({\n      addMoreFriendsDialog: !this.state.addMoreFriendsDialog,\n      addDetailsDialog: !this.state.addDetailsDialog,\n      friendsToAdd: [...this.state.friendsToAdd, currentFriend],\n    });\n\n  openAddMoreDetails = (currentFriend) => {\n    this.setState({\n      addMoreFriendsDialog: !this.state.addMoreFriendsDialog,\n      addDetailsDialog: !this.state.addDetailsDialog,\n      addCountryCode: !this.state.addCountryCode,\n      friendsToAdd: [...this.state.friendsToAdd, currentFriend],\n    });\n  };\n\n  toggleFriendsToAdd = () => {\n    this.setState({\n      addMoreFriendsDialog: !this.state.addMoreFriendsDialog,\n      friendsToAdd: [],\n    });\n  };\n\n  handleRemoveUser = (friendKey) => {\n    let friendsToAdd = this.state.friendsToAdd.filter(\n      (friend) => friend.key !== friendKey\n    );\n    this.setState({ friendsToAdd });\n  };\n\n  toggleConfirmFriends = () => {\n    this.setState({\n      confirmFriendsDialog: !this.state.confirmFriendsDialog,\n      addMoreFriendsDialog: !this.state.addMoreFriendsDialog,\n    });\n  };\n\n  addCountryCode = (currentFriend) => {\n    this.setState({\n      addCountryCode: !this.state.addCountryCode,\n      currentFriend,\n    });\n  };\n\n  confirmRemoveFriend = (key) => {\n    this.setState({ confirmRemoveFriend: !this.state.confirmRemoveFriend });\n  };\n\n  editFriendDetails = (key) => {\n    let friendToEdit = this.state.friendsToAdd.filter(\n      (friend) => friend.key === key\n    );\n\n    this.setState({\n      editFriendDetails: { ...friendToEdit[0] },\n      editFriendDetailsDialog: !this.state.editFriendDetailsDialog,\n    });\n  };\n\n  toggleEditFriendDetailsDialog = () => {\n    this.setState({\n      editFriendDetailsDialog: !this.state.editFriendDetailsDialog,\n    });\n  };\n\n  toggleConfirmFriendsDialog = () => {\n    this.setState({\n      confirmFriendsDialog: !this.state.confirmFriendsDialog,\n      friendsToAdd: [],\n    });\n  };\n\n  handleAddFriends = () => {\n    let friendsToAdd = [...this.state.friendsList, ...this.state.friendsToAdd];\n    this.setState((prevState) => {\n      return this.setState({\n        confirmFriendsDialog: !this.state.confirmFriendsDialog,\n        friendsList: friendsToAdd,\n        friendsToAdd: [],\n      });\n    });\n    this.addFriendsToDb(this.state.friendsToAdd);\n  };\n\n  addFriendsToDb = (friendsList) => {\n    friendsList.forEach((friend) => {\n      firebase\n        .database()\n        .ref(\"friendsList\")\n        .push({\n          ...friend,\n        });\n    });\n  };\n\n  handleEditedFriend = (editedFriend) => {\n    let filteredFriends = this.state.friendsToAdd.filter(\n      (friend) => friend.key !== editedFriend.key\n    );\n    this.setState({\n      friendsToAdd: [...filteredFriends, editedFriend],\n      editFriendDetailsDialog: !this.state.editFriendDetailsDialog,\n    });\n  };\n\n  switchTab = (tabName) => {\n    switch (tabName) {\n      case \"friendsTab\":\n        this.setState({\n          openFriends: true,\n          openGroups: false,\n          openActivity: false,\n        });\n        break;\n      case \"groupsTab\":\n        this.setState({\n          openFriends: false,\n          openGroups: true,\n          openActivity: false,\n        });\n        break;\n      case \"activityTab\":\n        this.setState({\n          openFriends: false,\n          openGroups: false,\n          openActivity: true,\n        });\n        break;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"app-dashboard\">\n        <Header\n          threeDotsDialog={this.state.threeDotsDialog}\n          toggle3DotsDialog={this.toggle3DotsDialog}\n          toggleOptionsDialog={this.toggleOptionsDialog}\n        />\n        <NavBar\n          switchTab={this.switchTab}\n          openFriends={this.state.openFriends}\n          openGroups={this.state.openGroups}\n          openActivity={this.state.openActivity}\n          friendsList={this.state.friendsList}\n        />\n        <AddExpenseButton\n          addExpense={this.addExpense}\n          color=\"secondary\"\n          tooltip=\"Add Expense\"\n          toggleAddExpenseDialog={this.toggleAddExpenseDialog}\n        />\n        {this.state.optionsDialog && (\n          <OptionsDialog\n            optionsDialog={this.state.optionsDialog}\n            toggleOptionsDialog={this.toggleOptionsDialog}\n          />\n        )}\n        {this.state.threeDotsDialog && (\n          <ThreeDotsPopover\n            anchorEl={this.state.anchorEl}\n            handle3DotsClose={this.handle3DotsClose}\n            friendsToAdd={this.state.friendsToAdd}\n            toggleThreeDots={this.toggleThreeDots}\n            threeDotsDialog={this.state.threeDotsDialog}\n          />\n        )}\n        {this.state.addFriendDialog && (\n          <AddFriend\n            addFriend={this.state.addFriendDialog}\n            handleCurrentFriend={this.handleCurrentFriend}\n            toggleAddFriend={this.toggleAddFriend}\n            handleBackButton={this.handleBackButton}\n          />\n        )}\n        {this.state.addDetailsDialog && (\n          <AddDetails\n            addDetailsDialog={this.state.addDetailsDialog}\n            currentFriend={this.state.currentFriend}\n            handleCurrentFriend={this.handleCurrentFriend}\n            toggleWrongInput={this.toggleWrongInput}\n            toggleAddMoreFriends={this.toggleAddMoreFriends}\n            toggleAddDetails={this.toggleAddDetails}\n            handleBackButton={this.handleBackButton}\n            addCountryCode={this.addCountryCode}\n            handleAddMoreFriends={this.handleAddMoreFriends}\n          />\n        )}\n        {this.state.addCountryCode && (\n          <AddCountryCode\n            addCountryCode={this.addCountryCode}\n            currentFriend={this.state.currentFriend}\n            handlePhoneNumber={this.handlePhoneNumber}\n            openAddMoreDetails={this.openAddMoreDetails}\n          />\n        )}\n        {this.state.wrongInputDialog && (\n          <WrongInput\n            wrongInputDialog={this.state.wrongInputDialog}\n            toggleWrongInput={this.toggleWrongInput}\n          />\n        )}\n        {this.state.addMoreFriendsDialog && (\n          <AddMoreFriends\n            addMoreFriendsDialog={this.state.addMoreFriendsDialog}\n            friendsToAdd={this.state.friendsToAdd}\n            toggleAddMoreFriends={this.toggleAddMoreFriends}\n            handleCurrentFriend={this.handleCurrentFriend}\n            toggleFriendsToAdd={this.toggleFriendsToAdd}\n            handleBackButton={this.handleBackButton}\n            handleRemoveUser={this.handleRemoveUser}\n            confirmFriendsDialog={this.state.confirmFriendsDialog}\n            toggleConfirmFriends={this.toggleConfirmFriends}\n          />\n        )}\n        {this.state.confirmFriendsDialog && (\n          <ConfirmFriends\n            confirmFriendsDialog={this.state.confirmFriendsDialog}\n            friendsToAdd={this.state.friendsToAdd}\n            handleRemoveUser={this.handleRemoveUser}\n            editFriendDetails={this.editFriendDetails}\n            toggleConfirmFriendsDialog={this.toggleConfirmFriendsDialog}\n            handleAddFriends={this.handleAddFriends}\n          />\n        )}\n        {this.state.editFriendDetailsDialog && (\n          <EditFriendDetails\n            toggleEditFriendDetailsDialog={this.toggleEditFriendDetailsDialog}\n            editFriendDetailsDialog={this.state.editFriendDetailsDialog}\n            editFriendDetails={this.state.editFriendDetails}\n            toggleWrongInput={this.toggleWrongInput}\n            handleEditedFriend={this.handleEditedFriend}\n          />\n        )}\n        <AddExpense\n          addExpenseDialog={this.state.addExpenseDialog}\n          toggleAddExpenseDialog={this.toggleAddExpenseDialog}\n        />\n      </div>\n    );\n  }\n}\n  ",["133","134"],"/home/rahul/Desktop/projects/GoDutch/src/Components/ConfirmFriends.js",[],["135","136"],"/home/rahul/Desktop/projects/GoDutch/src/Components/WrongInput.js",[],["137","138"],"/home/rahul/Desktop/projects/GoDutch/src/Components/UserBalance.js",[],"/home/rahul/Desktop/projects/GoDutch/src/index.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/FilterDialog.js",[],"/home/rahul/Desktop/projects/GoDutch/src/firebase/firebase.js",[],["139","140"],"/home/rahul/Desktop/projects/GoDutch/src/reportWebVitals.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/FriendsTab.js",["141"],"\nimport React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport UserBalance from './UserBalance'\nimport FilterDialog from './FilterDialog'\nimport FriendsList from './FriendsList'\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\n\nimport firebase from '../firebase/firebase'\n\nconst friendsTabStyles = {\n  user: {\n    width: \"100%\",\n    height: \"80px\",\n    backgroundColor: \"#eada82\",\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    color: \"#000\"\n  },\n  filter: {\n    position: \"relative\"\n  },\n  filterBtn: {\n    minWidth: \"35px !important\",\n    height: \"30px !important\",\n    border: \"2px solid black\",\n    borderRadius: \"50%\",\n    cursor: \"pointer\",\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  friendsList: {\n    backgroundColor: \"#fff\",\n    color: \"#000\",\n    padding:\"1rem\"\n  }\n};\n\nclass FriendsTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterDialog: false,\n      friendsList:[]\n    };\n  }\n\n  componentDidMount() {\n    let friendsList = [];\n    firebase.database().ref(\"friendsList\")\n    .on('value', (snapshot) => {\n      friendsList=[]\n      snapshot.forEach((childSnapshot) => {\n        friendsList.push({\n          ...childSnapshot.val(),\n          id:childSnapshot.key\n        })\n      })\n      this.setState({friendsList}) \n    })    \n  }\n  toggleDialog = () =>\n    this.setState({ filterDialog: !this.state.filterDialog });\n\n  render() {\n    const { classes } = this.props;\n    const {friendsList, filterDialog} = this.state\n    return (\n      <div className={classes.friendsTab}>\n        <div className={classes.user}>\n          <UserBalance />\n          <div className={classes.filter}>\n            <FilterListIcon\n              className={classes.filterBtn}\n              onClick={this.toggleDialog}\n            />\n            {filterDialog && (\n              <FilterDialog\n                tabName={this.props.tabName}\n                filterDialog={this.state.filterDialog}\n                toggleDialog={this.toggleDialog}\n              />\n            )}\n          </div>\n        </div>\n        <div className={classes.friendsList}>\n          <FriendsList friendsList={this.state.friendsList}/>\n        </div>\n        {/* <div className={classes.friends}>\n          {friendsList.map(friend => {\n            return (\n              <div>\n                {friend.name}\n              </div>\n            );\n          })}\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(friendsTabStyles)(FriendsTab);\n",["142","143"],"/home/rahul/Desktop/projects/GoDutch/src/Components/AddCountryCode.js",[],["144","145"],"/home/rahul/Desktop/projects/GoDutch/src/Components/GroupsTab.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/FriendsList.js",["146"],"import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst FriendsInDashboardStyles = {\n  friendsList: {\n    padding: \"10px 20px\"\n  },\n  avatar: {\n    width: \"45px !important\",\n    height: \"40px !important\",\n    borderRadius: \"50%\",\n    backgroundImage: `url(\"https://bit.ly/2UhwGb4\")`,\n    border: \"3px solid #00b8a9\",\n    marginRight: \"10px\"\n  },\n  friend: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginTop:\"1rem\"\n  },\n  left: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  FriendName: {\n\n  },\n  right: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n};\n\nclass FriendsInDashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      friends: false\n    };\n  }\n  render() {\n    const { classes, friendsList } = this.props;\n    return (\n        \n      <div className={classes.friendSummary}>\n          {friendsList.map((friend) => {\n              if(friend.balance) {\n                return (\n                  <div className={classes.friend}>\n                  <div className={classes.left}>\n                    <div className={classes.avatar} />\n                    <div className={classes.FriendName}>{friend.name}</div>\n                  </div>\n                  <div className={classes.right}>{friend.balance}</div>\n                </div>\n                )\n              }\n          })}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(FriendsInDashboardStyles)(FriendsInDashboard);\n","/home/rahul/Desktop/projects/GoDutch/src/Components/AddExpense.js",["147","148"],"import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\n\nimport WhoPaidDialog from \"./WhoPaidDialog\";\nimport ChoosePayer from \"./ChoosePayer\";\nimport AmountPaidByPerPerson from \"./AmountPaidByPerPerson\";\nimport PerPersonShareDialog from \"./PerPersonShareDialog\";\n\nimport firebase from \"../firebase/firebase\";\n\nconst AddExpenseStyles = {\n  AddExpense: {\n    maxWidth: \"600px\",\n    position: \"relative\",\n  },\n  header: {\n    height: \"40px\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"#00b8a9\",\n  },\n  left: {\n    width: \"30%\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  addFriendForExpense: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"relative\",\n    marginTop: \"20px\",\n  },\n  selectFriend: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  friendInput: {\n    width: \"400px\",\n  },\n  populateFriends: {\n    width: \"400px\",\n    height: \"auto\",\n    marginTop: \"5px\",\n    marginLeft: \"10px\",\n    border: \"1px solid #eee\",\n    position: \"absolute\",\n    top: \"40px\",\n    right: \"50px\",\n    backgroundColor: \"#fff\",\n    zIndex: 5,\n    boxShadow: \"2px 2px 2px 2px #C9C9C9\",\n  },\n  friend: {\n    height: \"40px\",\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    paddingLeft: \"10px\",\n    \"&:hover\": {\n      backgroundColor: \"#eee\",\n    },\n  },\n  description: {\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: \"5px 20px\",\n  },\n  descriptionText: {\n    outline: \"none\",\n    width: \"50%\",\n  },\n  expense: {\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: \"5px 20px\",\n  },\n  expenseValue: {\n    outline: \"none\",\n    width: \"50%\",\n  },\n  split: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: \"1rem\",\n  },\n  splitType: {\n    width: \"300px\",\n    textAlign: \"center\",\n    padding: \"0.3rem\",\n    cursor: \"pointer\",\n    boxShadow: \"1px 1px 2px 1px #C9C9C9\",\n  },\n};\n\nclass AddExpense extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      friendsListDialogOpen: true,\n      whoPaidDialog: false,\n      choosePayerDialog: false,\n      AmountPaidByPerPersonDialog: false,\n      perPersonShareDialog: false,\n\n      friendsList: [],\n      singlePayerName: \"You\",\n\n      youPaidSplitEqual: true,\n      youOweFull: false,\n      theyOweFull: false,\n      theyPaidSplitEqual: false,\n      moreOptions: false,\n      whoPaidText: \"Paid by YOU and split EQUALLY\",\n      multiplePeople: false,\n\n      currentExpense: {\n        description: \"\",\n        expenseAmount: 0,\n        contributors: [],\n        whoPaid: \"\",\n        amountYouOwe: 0,\n      },\n    };\n  }\n\n  componentDidMount() {\n    let friendsList = [];\n    firebase\n      .database()\n      .ref(\"friendsList\")\n      .on(\"value\", (snapshot) => {\n        friendsList = [];\n        snapshot.forEach((childSnapshot) => {\n          friendsList.push({\n            ...childSnapshot.val(),\n            id: childSnapshot.key,\n          });\n        });\n        this.setState({ friendsList });\n      });\n  }\n\n  toggleFriendsListDialog = () => {\n    this.setState({ friendsListDialogOpen: !this.state.friendsListDialogOpen });\n  };\n  toggleChoosePayerDialog = () => {\n    this.setState({ choosePayerDialog: !this.state.choosePayerDialog });\n  };\n  toggleWhoPaidDialog = () => {\n    this.setState({ whoPaidDialog: !this.state.whoPaidDialog });\n  };\n  toggleAmountPaidByPerPerson = () => {\n    this.setState({\n      choosePayerDialog: !this.state.choosePayerDialog,\n      AmountPaidByPerPersonDialog: !this.state.AmountPaidByPerPersonDialog,\n    });\n  };\n  togglePerPersonShareDialog = () => {\n    this.setState({ perPersonShareDialog: !this.state.perPersonShareDialog });\n  };\n  handleContributors = (e, users) => {\n    let contributors = users.map((user) => {\n      return {\n        name: user.name,\n        id: user.id,\n        amountPaid: 0,\n        expenseShare: 0,\n        amountUserOwes: 0,\n      };\n    });\n    this.setState({\n      currentExpense: {\n        ...this.state.currentExpense,\n        contributors: [\n          {\n            name: \"You\",\n            id: \"abcd\",\n            amountPaid: 0,\n            expenseShare: 0,\n            amountUserOwes: 0,\n          },\n          ...contributors,\n        ],\n      },\n    });\n  };\n  handleDescription = (e) => {\n    this.setState({\n      currentExpense: {\n        ...this.state.currentExpense,\n        description: e.target.value,\n      },\n    });\n  };\n  handleAmount = (e) => {\n    this.setState({\n      currentExpense: {\n        ...this.state.currentExpense,\n        expenseAmount: parseFloat(e.target.value),\n      },\n    });\n  };\n\n  handlePayer = (payer) => {\n    this.setState({\n      multiplePeople: false,\n      singlePayerName: payer.name,\n      choosePayerDialog: !this.state.choosePayerDialog,\n    });\n  };\n  resetExpense = () => {\n    this.setState({\n      currentExpense: {\n        description: \"\",\n        expenseAmount: 0,\n        contributors: [],\n        whoPaid: \"\",\n        amountYouOwe: 0,\n      },\n    });\n    this.props.toggleAddExpenseDialog();\n  };\n  handleMultiplePeople = () => {\n    this.setState({\n      multiplePeople: true,\n      AmountPaidByPerPersonDialog: !this.state.AmountPaidByPerPersonDialog,\n    });\n  };\n  toggleAmountPaidByPerPerson = () => {\n    this.setState({\n      choosePayerDialog: !this.state.choosePayerDialog,\n      AmountPaidByPerPersonDialog: !this.state.AmountPaidByPerPersonDialog,\n    });\n  };\n  handleExpensePaidShare = (contributors) => {\n    console.log(contributors);\n  };\n  render() {\n    const { classes, addExpenseDialog } = this.props;\n    const {\n      friendsList,\n      whoPaidDialog,\n      choosePayerDialog,\n      AmountPaidByPerPersonDialog,\n      perPersonShareDialog,\n      currentExpense,\n      moreOptions,\n      currentExpense: { expenseAmount, contributors },\n    } = this.state;\n    return (\n      <div className={classes.addFriend}>\n        <Dialog\n          fullScreen={true}\n          open={addExpenseDialog}\n          aria-labelledby=\"Add new expense\"\n          aria-describedby=\"Add new expense\"\n          onBackdropClick={this.resetExpense}\n          onEscapeKeyDown={this.resetExpense}\n          classes={{ paper: classes.AddExpense }}\n        >\n          <form onSubmit={this.handleExpenseSharing}>\n            <div className={classes.header}>\n              <div className={classes.left}>\n                <ArrowBackIcon className={classes.arrowBack} />\n                <Typography variant=\"subtitle1\">Add expense</Typography>\n              </div>\n              <div className={classes.right}>\n                <Button type=\"submit\">SAVE</Button>\n              </div>\n            </div>\n            <div className={classes.Addexpense}>\n              <div className={classes.addFriendForExpense}>\n                <div className={classes.selectFriend}>\n                  <div className={classes.text}>With you and:&nbsp;</div>\n                  <Autocomplete\n                    multiple\n                    id=\"tags-standard\"\n                    options={friendsList}\n                    getOptionLabel={(option) => option.name}\n                    style={{ width: 300 }}\n                    onChange={this.handleContributors}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        autoFocus={true}\n                        label=\"Enter names, emails or phone #s\"\n                        required={!currentExpense.contributors.length}\n                      />\n                    )}\n                  />\n                </div>\n              </div>\n\n              <div className={classes.description}>\n                <ReceiptIcon />\n                <TextField\n                  id=\"description\"\n                  className={classes.descriptionText}\n                  placeholder=\"Enter a description\"\n                  value={currentExpense.description}\n                  onChange={this.handleDescription}\n                  required\n                />\n              </div>\n              <div className={classes.expense}>\n                <div>INR:&nbsp;</div>\n                <TextField\n                  id=\"description\"\n                  className={classes.expenseValue}\n                  placeholder=\"0.00\"\n                  type=\"number\"\n                  value={currentExpense.expenseAmount}\n                  onChange={this.handleAmount}\n                  required\n                />\n              </div>\n              <div className={classes.split}>\n                <div>\n                  Paid by\n                  <span\n                    className={classes.splitType}\n                    onClick={this.toggleChoosePayerDialog}\n                  >\n                    {this.state.multiplePeople\n                      ? \"2+ People\"\n                      : `${this.state.singlePayerName}`}\n                  </span>\n                  and split\n                  <span className={classes.splitType} onClick={this.togglePerPersonShareDialog}>EQUALLY</span>\n                </div>\n              </div>\n            </div>\n          </form>\n        </Dialog>\n\n        {whoPaidDialog && (\n          <WhoPaidDialog\n            whoPaidDialog={whoPaidDialog}\n            handlePayment={this.handlePayment}\n            toggleWhoPaidDialog={this.toggleWhoPaidDialog}\n            contributors={contributors}\n            expenseAmount={expenseAmount}\n          />\n        )}\n        {choosePayerDialog && (\n          <ChoosePayer\n            toggleChoosePayerDialog={this.toggleChoosePayerDialog}\n            choosePayerDialog={choosePayerDialog}\n            contributors={contributors}\n            handlePayer={this.handlePayer}\n            handleMultiplePeople={this.handleMultiplePeople}\n          />\n        )}\n        {AmountPaidByPerPersonDialog && (\n          <AmountPaidByPerPerson\n            AmountPaidByPerPersonDialog={AmountPaidByPerPersonDialog}\n            toggleAmountPaidByPerPerson={this.toggleAmountPaidByPerPerson}\n            contributors={contributors}\n            handleExpensePaidShare={this.handleExpensePaidShare}\n            expenseAmount={expenseAmount}\n          />\n        )}\n        {perPersonShareDialog && (\n          <PerPersonShareDialog\n            perPersonShareDialog={perPersonShareDialog}\n            togglePerPersonShareDialog={this.togglePerPersonShareDialog}\n            contributors={contributors}\n            expenseAmount={expenseAmount}\n\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(AddExpenseStyles)(AddExpense);\n\n{\n  /* {contributors.length === 2 ? (\n                    <div\n                      className={classes.splitType}\n                      onClick={this.toggleWhoPaidDialog}\n                    >\n                      Paid by YOU and split EQUALLY\n                    </div>\n                  ) : (\n                    <div>\n                      Paid by\n                      <span\n                        className={classes.splitType}\n                        onClick={this.toggleChoosePayerDialog}\n                      >\n                        YOU\n                      </span>\n                      and split\n                      <span className={classes.splitType}>EQUALLY</span>\n                    </div>\n                  )} \n                \n                 handlePayment = (payee) => {\n    switch (payee) {\n      case \"youPaidSplitEqual\":\n        this.setState({\n          youPaidSplitEqual: true,\n          youOweFull: false,\n          theyOweFull: false,\n          theyPaidSplitEqual: false,\n          moreOptions: false,\n          whoPaidText: \"Paid by YOU and split EQUALLY\",\n        });\n        break;\n      case \"youOweFull\":\n        this.setState({\n          youPaidSplitEqual: false,\n          youOweFull: true,\n          theyOweFull: false,\n          theyPaidSplitEqual: false,\n          moreOptions: false,\n          whoPaidText: \"You owe the full amount\",\n        });\n        break;\n      case \"theyOweFull\":\n        this.setState({\n          youPaidSplitEqual: false,\n          youOweFull: false,\n          theyOweFull: true,\n          theyPaidSplitEqual: false,\n          moreOptions: false,\n          whoPaidText: \"They owe the full amount\",\n        });\n        break;\n      case \"theyPaidSplitEqual\":\n        this.setState({\n          youPaidSplitEqual: false,\n          youOweFull: false,\n          theyOweFull: false,\n          theyPaidSplitEqual: true,\n          moreOptions: false,\n          whoPaidText: \"Paid by the other person and split EQUALLY\",\n        });\n        break;\n      case \"moreOptions\":\n        this.setState({\n          youPaidSplitEqual: false,\n          youOweFull: false,\n          theyOweFull: false,\n          theyPaidSplitEqual: false,\n          moreOptions: true,\n          choosePayerDialog: !this.state.choosePayerDialog,\n        });\n        break;\n    }\n    this.setState({ whoPaidDialog: !this.state.whoPaidDialog });\n  };\n  handleExpenseSharing = (e) => {\n    e.preventDefault();\n    let {\n      youPaidSplitEqual,\n      currentExpense,\n      youOweFull,\n      theyOweFull,\n      theyPaidSplitEqual,\n      moreOptions,\n      currentExpense: { expenseAmount, contributors },\n    } = this.state;\n    let amountYouOwe, whoPaid, perPersonShare, amount;\n\n    switch (true) {\n      case youPaidSplitEqual:\n        perPersonShare = expenseAmount / contributors.length;\n        amount = perPersonShare * contributors.length - 1;\n        amountYouOwe = amount;\n        whoPaid = \"You\";\n        break;\n      case youOweFull:\n        amountYouOwe = -expenseAmount;\n        whoPaid = \"You\";\n        break;\n      case theyOweFull:\n        amountYouOwe = expenseAmount;\n        whoPaid = contributors[0];\n        break;\n      case theyPaidSplitEqual:\n        perPersonShare = expenseAmount / contributors.length;\n        amountYouOwe = -perPersonShare;\n        whoPaid = contributors[0];\n        break;\n      case moreOptions:\n        console.log(\"moreOptions\");\n        break;\n    }\n    console.log(\" no moreOptions\");\n    this.setState({\n      currentExpense: { ...currentExpense, amountYouOwe, whoPaid },\n    });\n    this.props.toggleAddExpenseDialog();\n    firebase\n      .database()\n      .ref(\"allExpenses\")\n      .push({ ...currentExpense, amountYouOwe, whoPaid });\n    // firebase.database().ref(\"friendsList\").push({})\n  };\n                \n                */\n}\n","/home/rahul/Desktop/projects/GoDutch/src/Components/AddFriend.js",[],["149","150"],"/home/rahul/Desktop/projects/GoDutch/src/Components/OptionsDialog.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/EditFriendDetails.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/NavBar.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/AddMoreFriends.js",[],["151","152"],"/home/rahul/Desktop/projects/GoDutch/src/Components/AddDetails.js",["153"],"import React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\n\n\nconst addDetailsStyles = {\n    addDetails: {\n      maxWidth: \"600px\"\n    },\n    header: {\n      height: \"40px\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      backgroundColor: \"#eee\"\n    },\n    left: {\n      width: \"30%\",\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    details: {\n      width: \"600px\"\n    },\n    name: {\n      display: \"block\",\n      width: \"100%\"\n    },\n    contact: {\n      display: \"block\",\n      width: \"100%\"\n    },\n    arrow: {\n      cursor: \"pointer\"\n    }\n  };\n  \n  class AddDetails extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        currentFriend: this.props.currentFriend,\n        addBtnDisable: true,\n        isNumber: false,\n        isEmail: false,\n        contactInfo:\n          this.props.currentFriend.email || this.props.currentFriend.number.number\n      };\n    }\n  \n    handleAddBtn = () => {\n      const { isEmail, isNumber } = this.state;\n      if (isEmail) this.props.handleAddMoreFriends(this.state.currentFriend);\n      else if (isNumber) this.props.addCountryCode(this.state.currentFriend);\n      else this.props.toggleWrongInput();\n    };\n  \n    handleName = e => {\n      let name = e.target.value;\n      this.setState(prevState => {\n        return { currentFriend: { ...prevState.currentFriend, name } };\n      }, this.activeAddBtn);\n    };\n  \n    handleContactInfo = e => {\n      let numberRegex = /^[1-9]\\d{7,11}$/;\n      let emailRegex = /^[\\d\\w.!#$%&'*+/=?^_`{|}~-]{1,30}@\\w{1,30}\\.\\w{1,30}/;\n      let contactInfo = e.target.value;\n      if (contactInfo !== \"\") {\n        this.setState(prevState => {\n          return {\n            contactInfo,\n            isEmail: emailRegex.test(contactInfo),\n            isNumber: numberRegex.test(contactInfo)\n          };\n        }, this.updateCurrentFriend);\n      } else\n        this.setState(\n          prevState => ({\n            contactInfo,\n            currentFriend: {\n              ...prevState.currentFriend,\n              number: { country: \"IN\", number: contactInfo },\n              email: contactInfo\n            }\n          }),\n          this.activeAddBtn\n        );\n    };\n  \n    updateCurrentFriend = () => {\n      const { contactInfo } = this.state;\n      if (/^[\\d]+$/g.test(contactInfo))\n        this.setState(prevState => {\n          return {\n            currentFriend: {\n              ...prevState.currentFriend,\n              number: { country: \"IN\", number: contactInfo, dialCode: \"91\" }\n            }\n          };\n        }, this.activeAddBtn);\n      else\n        this.setState(prevState => {\n          return {\n            currentFriend: { ...prevState.currentFriend, email: contactInfo }\n          };\n        }, this.activeAddBtn);\n    };\n  \n    activeAddBtn = () => {\n      const { email, number, name } = this.state.currentFriend;\n      if (!!name && (!!email || !!number.number))\n        this.setState({ addBtnDisable: false });\n      else this.setState({ addBtnDisable: true });\n    };\n  \n    render() {\n      const { classes } = this.props;\n      const { currentFriend, contactInfo } = this.state;\n      return (\n        <Dialog\n          fullScreen={true}\n          open={this.props.addDetailsDialog}\n          aria-labelledby=\"Add New friend Dialog\"\n          aria-describedby=\"Add New friend Dialog\"\n          onBackdropClick={this.props.toggleAddDetails}\n          onEscapeKeyDown={this.props.toggleAddDetails}\n          classes={{ paper: classes.addDetails }}\n        >\n          <div className={classes.header}>\n            <div className={classes.left}>\n              <ArrowBackIcon\n                className={classes.arrow}\n                onClick={this.props.toggleAddDetails}\n              />\n              <Typography variant=\"subtitle1\">Add new contact</Typography>\n            </div>\n            <div className={classes.right}>\n              <Button\n                disabled={this.state.addBtnDisable}\n                onClick={this.handleAddBtn}\n              >\n                ADD\n              </Button>\n            </div>\n          </div>\n          <div className={classes.details}>\n            <form className={classes.friendForm}>\n              <TextField\n                id=\"name-field\"\n                label=\"Name\"\n                className={classes.name}\n                onChange={this.handleName}\n                value={this.state.currentFriend.name}\n              />\n              <TextField\n                id=\"contact-field\"\n                label=\"Phone number or email address\"\n                className={classes.contact}\n                onChange={this.handleContactInfo}\n                value={contactInfo}\n              />\n            </form>\n          </div>\n          <div className=\"message\">\n            Don't worry, nothing sends just yet. You will have another chance to\n            review before sending.\n          </div>\n        </Dialog>\n      );\n    }\n  }\n  \n  export default withStyles(addDetailsStyles)(AddDetails);\n  ","/home/rahul/Desktop/projects/GoDutch/src/Components/ThreeDotsPopover.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/WhoPaidDialog.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/Header.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/ChoosePayer.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/AmountPaidByPerPerson.js",["154"],"/home/rahul/Desktop/projects/GoDutch/src/Components/PerPersonShareDialog.js",["155","156"],"import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { MenuItem, FormControl, Select } from \"@material-ui/core\";\nimport SplitEqually from \"./SplitEqually\";\n\nconst PerPersonShareDialogStyles = {\n  dialog: {\n    width: \"400px\",\n    height: \"auto\",\n    display: \"flex\",\n    padding: \"0rem 1rem 2rem 1rem\",\n  },\n  header: {\n    textAlign: \"center\",\n    color: \"#777\",\n    margin: \"1rem 0rem\",\n  },\n  formControl: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  selectSplit: {\n    width: \"12rem\",\n  },\n};\n\nclass PerPersonShareDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentSplitMode: \"equally\",\n      equally: true,\n      unequally: false,\n      percentages: false,\n      shares: false,\n      adjustment: false,\n    };\n  }\n  showSplitWindow = (equally, unequally, percentages, shares, adjustment) => {\n    this.setState({\n      equally,\n      unequally,\n      percentages,\n      shares,\n      adjustment,\n    });\n  };\n  handleSplitChnage = (e) => {\n    let currentSplitMode = e.target.value;\n    this.setState({ currentSplitMode });\n    switch (currentSplitMode) {\n      case \"equally\":\n        this.showSplitWindow(true, false, false, false, false);\n        break;\n      case \"unequally\":\n        this.showSplitWindow(false, true, false, false, false);\n        break;\n      case \"percentages\":\n        this.showSplitWindow(false, false, true, false, false);\n        break;\n      case \"shares\":\n        this.showSplitWindow(false, false, false, true, false);\n        break;\n      case \"adjustment\":\n        this.showSplitWindow(false, false, false, false, true);\n        break;\n    }\n  };\n\n  render() {\n    const {\n      classes,\n      perPersonShareDialog,\n      togglePerPersonShareDialog,\n      contributors,\n    } = this.props;\n    const {} = this.state;\n    console.log(this.state.totalAmount);\n    return (\n      <div className={classes.perPersonShare}>\n        <Dialog\n          open={perPersonShareDialog}\n          aria-labelledby=\"Each person's share in the expense\"\n          aria-describedby=\"Each person's share in the expense\"\n          onBackdropClick={togglePerPersonShareDialog}\n          onEscapeKeyDown={togglePerPersonShareDialog}\n          classes={{ paper: classes.dialog }}\n        >\n          <div className={classes.header}>Enter each person's share</div>\n          <FormControl className={classes.formControl}>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={this.state.currentSplitMode}\n              onChange={this.handleSplitChnage}\n              className={classes.selectSplit}\n            >\n              <MenuItem value={\"equally\"}>Split Equally</MenuItem>\n              <MenuItem value={\"unequally\"}>Split Unequally</MenuItem>\n              <MenuItem value={\"percentages\"}>Split by percentages</MenuItem>\n              <MenuItem value={\"shares\"}>Split by shares</MenuItem>\n              <MenuItem value={\"adjustment\"}>Split by adjustment</MenuItem>\n            </Select>\n          </FormControl>\n          {this.state.equally && <SplitEqually contributors={contributors}\n          expenseAmount={this.props.expenseAmount}\n />}\n          {this.state.unequally && <SplitEqually />}\n          {this.state.percentages && <SplitEqually />}\n          {this.state.shares && <SplitEqually />}\n          {this.state.adjustment && <SplitEqually />}\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(PerPersonShareDialogStyles)(PerPersonShareDialog);\n","/home/rahul/Desktop/projects/GoDutch/src/Components/SplitEqually.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/PaidByWarning.js",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":149,"column":5,"nodeType":"163","messageId":"164","endLine":162,"endColumn":6},{"ruleId":"161","severity":1,"message":"162","line":316,"column":5,"nodeType":"163","messageId":"164","endLine":338,"endColumn":6},{"ruleId":"157","replacedBy":"165"},{"ruleId":"159","replacedBy":"166"},{"ruleId":"157","replacedBy":"167"},{"ruleId":"159","replacedBy":"168"},{"ruleId":"157","replacedBy":"169"},{"ruleId":"159","replacedBy":"170"},{"ruleId":"157","replacedBy":"171"},{"ruleId":"159","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":71,"column":12,"nodeType":"175","messageId":"176","endLine":71,"endColumn":23},{"ruleId":"157","replacedBy":"177"},{"ruleId":"159","replacedBy":"178"},{"ruleId":"157","replacedBy":"179"},{"ruleId":"159","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":46,"column":37,"nodeType":"183","messageId":"184","endLine":46,"endColumn":39},{"ruleId":"173","severity":1,"message":"185","line":259,"column":7,"nodeType":"175","messageId":"176","endLine":259,"endColumn":18},{"ruleId":"186","severity":1,"message":"187","line":391,"column":1,"nodeType":"188","messageId":"189","endLine":518,"endColumn":2},{"ruleId":"157","replacedBy":"190"},{"ruleId":"159","replacedBy":"191"},{"ruleId":"157","replacedBy":"192"},{"ruleId":"159","replacedBy":"193"},{"ruleId":"173","severity":1,"message":"194","line":125,"column":15,"nodeType":"175","messageId":"176","endLine":125,"endColumn":28},{"ruleId":"173","severity":1,"message":"195","line":103,"column":7,"nodeType":"175","messageId":"176","endLine":103,"endColumn":29},{"ruleId":"161","severity":1,"message":"162","line":52,"column":5,"nodeType":"163","messageId":"164","endLine":68,"endColumn":6},{"ruleId":"196","severity":1,"message":"197","line":78,"column":11,"nodeType":"198","messageId":"199","endLine":78,"endColumn":13},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["200"],["201"],["200"],["201"],["200"],["201"],["200"],["201"],"no-unused-vars","'friendsList' is assigned a value but never used.","Identifier","unusedVar",["200"],["201"],["200"],["201"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'moreOptions' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["200"],["201"],["200"],["201"],"'currentFriend' is assigned a value but never used.","'handleExpensePaidShare' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]