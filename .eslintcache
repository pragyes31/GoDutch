[{"/home/rahul/Desktop/projects/GoDutch/src/App.js":"1","/home/rahul/Desktop/projects/GoDutch/src/Components/AppDashboard.js":"2","/home/rahul/Desktop/projects/GoDutch/src/Components/ConfirmFriends.js":"3","/home/rahul/Desktop/projects/GoDutch/src/Components/WrongInput.js":"4","/home/rahul/Desktop/projects/GoDutch/src/Components/UserBalance.js":"5","/home/rahul/Desktop/projects/GoDutch/src/index.js":"6","/home/rahul/Desktop/projects/GoDutch/src/Components/FilterDialog.js":"7","/home/rahul/Desktop/projects/GoDutch/src/firebase/firebase.js":"8","/home/rahul/Desktop/projects/GoDutch/src/reportWebVitals.js":"9","/home/rahul/Desktop/projects/GoDutch/src/Components/FriendsTab.js":"10","/home/rahul/Desktop/projects/GoDutch/src/Components/AddCountryCode.js":"11","/home/rahul/Desktop/projects/GoDutch/src/Components/GroupsTab.js":"12","/home/rahul/Desktop/projects/GoDutch/src/Components/FriendsList.js":"13","/home/rahul/Desktop/projects/GoDutch/src/Components/AddExpense.js":"14","/home/rahul/Desktop/projects/GoDutch/src/Components/AddFriend.js":"15","/home/rahul/Desktop/projects/GoDutch/src/Components/OptionsDialog.js":"16","/home/rahul/Desktop/projects/GoDutch/src/Components/EditFriendDetails.js":"17","/home/rahul/Desktop/projects/GoDutch/src/Components/NavBar.js":"18","/home/rahul/Desktop/projects/GoDutch/src/Components/AddMoreFriends.js":"19","/home/rahul/Desktop/projects/GoDutch/src/Components/AddDetails.js":"20","/home/rahul/Desktop/projects/GoDutch/src/Components/ThreeDotsPopover.js":"21","/home/rahul/Desktop/projects/GoDutch/src/Components/WhoPaidDialog.js":"22","/home/rahul/Desktop/projects/GoDutch/src/Components/Header.js":"23","/home/rahul/Desktop/projects/GoDutch/src/Components/ChoosePayer.js":"24","/home/rahul/Desktop/projects/GoDutch/src/Components/AmountPaidByPerPerson.js":"25","/home/rahul/Desktop/projects/GoDutch/src/Components/PerPersonShareDialog.js":"26","/home/rahul/Desktop/projects/GoDutch/src/Components/SplitEqually.js":"27","/home/rahul/Desktop/projects/GoDutch/src/Components/PaidByWarning.js":"28","/home/rahul/Desktop/projects/GoDutch/src/Components/SplitByAdjustment.js":"29","/home/rahul/Desktop/projects/GoDutch/src/Components/SplitByShare.js":"30","/home/rahul/Desktop/projects/GoDutch/src/Components/SplitUnequally.js":"31","/home/rahul/Desktop/projects/GoDutch/src/Components/SplitByPercentage.js":"32"},{"size":190,"mtime":1608434691683,"results":"33","hashOfConfig":"34"},{"size":12932,"mtime":1611551332159,"results":"35","hashOfConfig":"34"},{"size":6175,"mtime":1608434691683,"results":"36","hashOfConfig":"34"},{"size":1394,"mtime":1608434691687,"results":"37","hashOfConfig":"34"},{"size":999,"mtime":1608434691687,"results":"38","hashOfConfig":"34"},{"size":486,"mtime":1609484607692,"results":"39","hashOfConfig":"34"},{"size":1798,"mtime":1608434691687,"results":"40","hashOfConfig":"34"},{"size":521,"mtime":1609501140363,"results":"41","hashOfConfig":"34"},{"size":362,"mtime":1608434691687,"results":"42","hashOfConfig":"34"},{"size":2629,"mtime":1609913625849,"results":"43","hashOfConfig":"34"},{"size":2349,"mtime":1608434691683,"results":"44","hashOfConfig":"34"},{"size":1805,"mtime":1608434691687,"results":"45","hashOfConfig":"34"},{"size":1496,"mtime":1611671353331,"results":"46","hashOfConfig":"34"},{"size":15099,"mtime":1617765479925,"results":"47","hashOfConfig":"34"},{"size":3081,"mtime":1608434691683,"results":"48","hashOfConfig":"34"},{"size":6013,"mtime":1608434691687,"results":"49","hashOfConfig":"34"},{"size":6894,"mtime":1608434691683,"results":"50","hashOfConfig":"34"},{"size":1489,"mtime":1608434691687,"results":"51","hashOfConfig":"34"},{"size":4220,"mtime":1608434691683,"results":"52","hashOfConfig":"34"},{"size":5342,"mtime":1608434691683,"results":"53","hashOfConfig":"34"},{"size":1832,"mtime":1608434691687,"results":"54","hashOfConfig":"34"},{"size":2601,"mtime":1612009316621,"results":"55","hashOfConfig":"34"},{"size":1275,"mtime":1608434691687,"results":"56","hashOfConfig":"34"},{"size":1963,"mtime":1612533516492,"results":"57","hashOfConfig":"34"},{"size":5198,"mtime":1614370981709,"results":"58","hashOfConfig":"34"},{"size":4701,"mtime":1617727119427,"results":"59","hashOfConfig":"34"},{"size":3319,"mtime":1616914360841,"results":"60","hashOfConfig":"34"},{"size":1269,"mtime":1614371259950,"results":"61","hashOfConfig":"34"},{"size":1947,"mtime":1617393533619,"results":"62","hashOfConfig":"34"},{"size":3844,"mtime":1617693684502,"results":"63","hashOfConfig":"34"},{"size":3175,"mtime":1617250929809,"results":"64","hashOfConfig":"34"},{"size":3761,"mtime":1617246745244,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"nowjuc",{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"75"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"78"},"/home/rahul/Desktop/projects/GoDutch/src/App.js",[],["148","149"],"/home/rahul/Desktop/projects/GoDutch/src/Components/AppDashboard.js",["150","151"],"import React from \"react\";\n\nimport AddCountryCode from \"./AddCountryCode\";\nimport AddFriend from \"./AddFriend\";\nimport AddDetails from \"./AddDetails\";\nimport AddExpense from \"./AddExpense\";\nimport AddMoreFriends from \"./AddMoreFriends\";\nimport ConfirmFriends from \"./ConfirmFriends\";\nimport EditFriendDetails from \"./EditFriendDetails\";\nimport Header from \"./Header\";\nimport NavBar from \"./NavBar\";\nimport OptionsDialog from \"./OptionsDialog\";\nimport ThreeDotsPopover from \"./ThreeDotsPopover\";\nimport WrongInput from \"./WrongInput\";\n\nimport firebase from \"../firebase/firebase\";\n\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst addExpenseButtonStyles = {\n  button: {\n    marginLeft: \".5rem\",\n    minWidth: \"50px\",\n    height: \"50px\",\n    color: \"#f2105a\",\n    fontSize: \"30px !important\",\n    cursor: \"pointer\",\n    position: \"fixed\",\n    bottom: \"5%\",\n    right: \"5%\",\n  },\n};\n\nfunction AddExpenseButtonComp(props) {\n  const { classes, toggleAddExpenseDialog } = props;\n  return (\n    <div>\n      <Tooltip title={props.tooltip}>\n        <AddCircleIcon\n          onClick={toggleAddExpenseDialog}\n          className={classes.button}\n        />\n      </Tooltip>\n    </div>\n  );\n}\n\nconst AddExpenseButton = withStyles(addExpenseButtonStyles)(\n  AddExpenseButtonComp\n);\n\nexport default class AppDashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      optionsDialog: false,\n      threeDotsDialog: false,\n      addFriendDialog: false,\n      addDetailsDialog: false,\n      wrongInputDialog: false,\n      addMoreFriendsDialog: false,\n      confirmFriendsDialog: false,\n      addCountryCode: false,\n      editFriendDetailsDialog: false,\n      addExpenseDialog: false,\n\n      anchorEl: false,\n\n      addFriend: false,\n\n      currentFriend: {\n        name: \"\",\n        number: { country: \"IN\", number: \"\", dialCode: \"91\" },\n        email: \"\",\n        key: \"\",\n        balance:\"\"\n      },\n      friendsToAdd: [],\n      editFriendDetails: {\n        name: \"\",\n        number: { country: \"IN\", number: \"\", dialCode: \"91\" },\n        email: \"\",\n        key: \"\",\n        balance:\"\"\n      },\n      friendsList: [],\n\n      openFriends: true,\n      openGroups: false,\n      openActivity: false,\n    };\n  }\n\n  handle3DotsClose = () => {\n    this.setState({\n      anchorEl: false,\n      threeDotsDialog: !this.state.threeDotsDialog,\n    });\n  };\n\n  toggleOptionsDialog = () =>\n    this.setState({ optionsDialog: !this.state.optionsDialog });\n\n  toggle3DotsDialog = (event) => {\n    this.setState({\n      anchorEl: event.currentTarget,\n      threeDotsDialog: !this.state.threeDotsDialog,\n    });\n  };\n\n  toggleThreeDots = () => {\n    this.setState({\n      addFriendDialog: !this.state.addFriendDialog,\n      threeDotsDialog: !this.state.threeDotsDialog,\n    });\n  };\n\n  toggleAddFriend = () => {\n    this.setState({ addFriendDialog: !this.state.addFriendDialog });\n  };\n\n  toggleAddDetails = () => {\n    this.setState({ addDetailsDialog: !this.state.addDetailsDialog });\n  };\n\n  handleBackButton = () => {\n    this.setState({\n      threeDotsDialog: false,\n      addFriendDialog: false,\n      addDetailsDialog: false,\n      addMoreFriendsDialog: false,\n      currentFriend: {\n        name: \"\",\n        number: { country: \"IN\", number: \"\" },\n        email: \"\",\n        key: \"\",\n      },\n      friendsToAdd: [],\n    });\n  };\n\n  handleCurrentFriend = (currentFriendInput, dateForKey, currentWindow) => {\n    let isNumber = /^[1-9]\\d+$/.test(currentFriendInput);\n    let isEmail = currentFriendInput.includes(\"@\");\n    switch (currentWindow) {\n      case \"AddFriend\":\n        setTimeout(\n          () => this.setState({ addFriendDialog: !this.state.addFriendDialog }),\n          200\n        );\n\n        break;\n      case \"AddMoreFriends\":\n        this.setState({\n          addMoreFriendsDialog: !this.state.addMoreFriendsDialog,\n        });\n        break;\n    }\n    if (isNumber) {\n      this.setState({\n        currentFriend: {\n          ...this.state.currentFriend,\n          number: {\n            country: \"IN\",\n            number: currentFriendInput,\n            dialCode: \"+91\",\n          },\n          key: dateForKey,\n        },\n        addDetailsDialog: !this.state.addDetailsDialog,\n      });\n    } else if (isEmail) {\n      this.setState({\n        currentFriend: {\n          ...this.state.currentFriend,\n          email: currentFriendInput,\n          key: dateForKey,\n        },\n        addDetailsDialog: !this.state.addDetailsDialog,\n      });\n    } else {\n      this.setState({\n        currentFriend: {\n          ...this.state.currentFriend,\n          key: dateForKey,\n          name: currentFriendInput,\n        },\n        addDetailsDialog: !this.state.addDetailsDialog,\n      });\n    }\n  };\n\n  toggleWrongInput = () =>\n    this.setState({ wrongInputDialog: !this.state.wrongInputDialog });\n\n  toggleAddMoreFriends = (currentFriend) =>\n    this.setState({\n      addMoreFriendsDialog: !this.state.addMoreFriendsDialog,\n      friendsToAdd: [],\n    });\n\n  toggleAddExpenseDialog = () => {\n    this.setState({ addExpenseDialog: !this.state.addExpenseDialog });\n  };\n\n  handleAddMoreFriends = (currentFriend) =>\n    this.setState({\n      addMoreFriendsDialog: !this.state.addMoreFriendsDialog,\n      addDetailsDialog: !this.state.addDetailsDialog,\n      friendsToAdd: [...this.state.friendsToAdd, currentFriend],\n    });\n\n  openAddMoreDetails = (currentFriend) => {\n    this.setState({\n      addMoreFriendsDialog: !this.state.addMoreFriendsDialog,\n      addDetailsDialog: !this.state.addDetailsDialog,\n      addCountryCode: !this.state.addCountryCode,\n      friendsToAdd: [...this.state.friendsToAdd, currentFriend],\n    });\n  };\n\n  toggleFriendsToAdd = () => {\n    this.setState({\n      addMoreFriendsDialog: !this.state.addMoreFriendsDialog,\n      friendsToAdd: [],\n    });\n  };\n\n  handleRemoveUser = (friendKey) => {\n    let friendsToAdd = this.state.friendsToAdd.filter(\n      (friend) => friend.key !== friendKey\n    );\n    this.setState({ friendsToAdd });\n  };\n\n  toggleConfirmFriends = () => {\n    this.setState({\n      confirmFriendsDialog: !this.state.confirmFriendsDialog,\n      addMoreFriendsDialog: !this.state.addMoreFriendsDialog,\n    });\n  };\n\n  addCountryCode = (currentFriend) => {\n    this.setState({\n      addCountryCode: !this.state.addCountryCode,\n      currentFriend,\n    });\n  };\n\n  confirmRemoveFriend = (key) => {\n    this.setState({ confirmRemoveFriend: !this.state.confirmRemoveFriend });\n  };\n\n  editFriendDetails = (key) => {\n    let friendToEdit = this.state.friendsToAdd.filter(\n      (friend) => friend.key === key\n    );\n\n    this.setState({\n      editFriendDetails: { ...friendToEdit[0] },\n      editFriendDetailsDialog: !this.state.editFriendDetailsDialog,\n    });\n  };\n\n  toggleEditFriendDetailsDialog = () => {\n    this.setState({\n      editFriendDetailsDialog: !this.state.editFriendDetailsDialog,\n    });\n  };\n\n  toggleConfirmFriendsDialog = () => {\n    this.setState({\n      confirmFriendsDialog: !this.state.confirmFriendsDialog,\n      friendsToAdd: [],\n    });\n  };\n\n  handleAddFriends = () => {\n    let friendsToAdd = [...this.state.friendsList, ...this.state.friendsToAdd];\n    this.setState((prevState) => {\n      return this.setState({\n        confirmFriendsDialog: !this.state.confirmFriendsDialog,\n        friendsList: friendsToAdd,\n        friendsToAdd: [],\n      });\n    });\n    this.addFriendsToDb(this.state.friendsToAdd);\n  };\n\n  addFriendsToDb = (friendsList) => {\n    friendsList.forEach((friend) => {\n      firebase\n        .database()\n        .ref(\"friendsList\")\n        .push({\n          ...friend,\n        });\n    });\n  };\n\n  handleEditedFriend = (editedFriend) => {\n    let filteredFriends = this.state.friendsToAdd.filter(\n      (friend) => friend.key !== editedFriend.key\n    );\n    this.setState({\n      friendsToAdd: [...filteredFriends, editedFriend],\n      editFriendDetailsDialog: !this.state.editFriendDetailsDialog,\n    });\n  };\n\n  switchTab = (tabName) => {\n    switch (tabName) {\n      case \"friendsTab\":\n        this.setState({\n          openFriends: true,\n          openGroups: false,\n          openActivity: false,\n        });\n        break;\n      case \"groupsTab\":\n        this.setState({\n          openFriends: false,\n          openGroups: true,\n          openActivity: false,\n        });\n        break;\n      case \"activityTab\":\n        this.setState({\n          openFriends: false,\n          openGroups: false,\n          openActivity: true,\n        });\n        break;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"app-dashboard\">\n        <Header\n          threeDotsDialog={this.state.threeDotsDialog}\n          toggle3DotsDialog={this.toggle3DotsDialog}\n          toggleOptionsDialog={this.toggleOptionsDialog}\n        />\n        <NavBar\n          switchTab={this.switchTab}\n          openFriends={this.state.openFriends}\n          openGroups={this.state.openGroups}\n          openActivity={this.state.openActivity}\n          friendsList={this.state.friendsList}\n        />\n        <AddExpenseButton\n          addExpense={this.addExpense}\n          color=\"secondary\"\n          tooltip=\"Add Expense\"\n          toggleAddExpenseDialog={this.toggleAddExpenseDialog}\n        />\n        {this.state.optionsDialog && (\n          <OptionsDialog\n            optionsDialog={this.state.optionsDialog}\n            toggleOptionsDialog={this.toggleOptionsDialog}\n          />\n        )}\n        {this.state.threeDotsDialog && (\n          <ThreeDotsPopover\n            anchorEl={this.state.anchorEl}\n            handle3DotsClose={this.handle3DotsClose}\n            friendsToAdd={this.state.friendsToAdd}\n            toggleThreeDots={this.toggleThreeDots}\n            threeDotsDialog={this.state.threeDotsDialog}\n          />\n        )}\n        {this.state.addFriendDialog && (\n          <AddFriend\n            addFriend={this.state.addFriendDialog}\n            handleCurrentFriend={this.handleCurrentFriend}\n            toggleAddFriend={this.toggleAddFriend}\n            handleBackButton={this.handleBackButton}\n          />\n        )}\n        {this.state.addDetailsDialog && (\n          <AddDetails\n            addDetailsDialog={this.state.addDetailsDialog}\n            currentFriend={this.state.currentFriend}\n            handleCurrentFriend={this.handleCurrentFriend}\n            toggleWrongInput={this.toggleWrongInput}\n            toggleAddMoreFriends={this.toggleAddMoreFriends}\n            toggleAddDetails={this.toggleAddDetails}\n            handleBackButton={this.handleBackButton}\n            addCountryCode={this.addCountryCode}\n            handleAddMoreFriends={this.handleAddMoreFriends}\n          />\n        )}\n        {this.state.addCountryCode && (\n          <AddCountryCode\n            addCountryCode={this.addCountryCode}\n            currentFriend={this.state.currentFriend}\n            handlePhoneNumber={this.handlePhoneNumber}\n            openAddMoreDetails={this.openAddMoreDetails}\n          />\n        )}\n        {this.state.wrongInputDialog && (\n          <WrongInput\n            wrongInputDialog={this.state.wrongInputDialog}\n            toggleWrongInput={this.toggleWrongInput}\n          />\n        )}\n        {this.state.addMoreFriendsDialog && (\n          <AddMoreFriends\n            addMoreFriendsDialog={this.state.addMoreFriendsDialog}\n            friendsToAdd={this.state.friendsToAdd}\n            toggleAddMoreFriends={this.toggleAddMoreFriends}\n            handleCurrentFriend={this.handleCurrentFriend}\n            toggleFriendsToAdd={this.toggleFriendsToAdd}\n            handleBackButton={this.handleBackButton}\n            handleRemoveUser={this.handleRemoveUser}\n            confirmFriendsDialog={this.state.confirmFriendsDialog}\n            toggleConfirmFriends={this.toggleConfirmFriends}\n          />\n        )}\n        {this.state.confirmFriendsDialog && (\n          <ConfirmFriends\n            confirmFriendsDialog={this.state.confirmFriendsDialog}\n            friendsToAdd={this.state.friendsToAdd}\n            handleRemoveUser={this.handleRemoveUser}\n            editFriendDetails={this.editFriendDetails}\n            toggleConfirmFriendsDialog={this.toggleConfirmFriendsDialog}\n            handleAddFriends={this.handleAddFriends}\n          />\n        )}\n        {this.state.editFriendDetailsDialog && (\n          <EditFriendDetails\n            toggleEditFriendDetailsDialog={this.toggleEditFriendDetailsDialog}\n            editFriendDetailsDialog={this.state.editFriendDetailsDialog}\n            editFriendDetails={this.state.editFriendDetails}\n            toggleWrongInput={this.toggleWrongInput}\n            handleEditedFriend={this.handleEditedFriend}\n          />\n        )}\n        <AddExpense\n          addExpenseDialog={this.state.addExpenseDialog}\n          toggleAddExpenseDialog={this.toggleAddExpenseDialog}\n        />\n      </div>\n    );\n  }\n}\n  ",["152","153"],"/home/rahul/Desktop/projects/GoDutch/src/Components/ConfirmFriends.js",[],["154","155"],"/home/rahul/Desktop/projects/GoDutch/src/Components/WrongInput.js",[],["156","157"],"/home/rahul/Desktop/projects/GoDutch/src/Components/UserBalance.js",[],["158","159"],"/home/rahul/Desktop/projects/GoDutch/src/index.js",[],["160","161"],"/home/rahul/Desktop/projects/GoDutch/src/Components/FilterDialog.js",[],"/home/rahul/Desktop/projects/GoDutch/src/firebase/firebase.js",[],"/home/rahul/Desktop/projects/GoDutch/src/reportWebVitals.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/FriendsTab.js",["162"],"\nimport React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport UserBalance from './UserBalance'\nimport FilterDialog from './FilterDialog'\nimport FriendsList from './FriendsList'\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\n\nimport firebase from '../firebase/firebase'\n\nconst friendsTabStyles = {\n  user: {\n    width: \"100%\",\n    height: \"80px\",\n    backgroundColor: \"#eada82\",\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    color: \"#000\"\n  },\n  filter: {\n    position: \"relative\"\n  },\n  filterBtn: {\n    minWidth: \"35px !important\",\n    height: \"30px !important\",\n    border: \"2px solid black\",\n    borderRadius: \"50%\",\n    cursor: \"pointer\",\n    backgroundColor: \"#fff\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  friendsList: {\n    backgroundColor: \"#fff\",\n    color: \"#000\",\n    padding:\"1rem\"\n  }\n};\n\nclass FriendsTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterDialog: false,\n      friendsList:[]\n    };\n  }\n\n  componentDidMount() {\n    let friendsList = [];\n    firebase.database().ref(\"friendsList\")\n    .on('value', (snapshot) => {\n      friendsList=[]\n      snapshot.forEach((childSnapshot) => {\n        friendsList.push({\n          ...childSnapshot.val(),\n          id:childSnapshot.key\n        })\n      })\n      this.setState({friendsList}) \n    })    \n  }\n  toggleDialog = () =>\n    this.setState({ filterDialog: !this.state.filterDialog });\n\n  render() {\n    const { classes } = this.props;\n    const {friendsList, filterDialog} = this.state\n    return (\n      <div className={classes.friendsTab}>\n        <div className={classes.user}>\n          <UserBalance />\n          <div className={classes.filter}>\n            <FilterListIcon\n              className={classes.filterBtn}\n              onClick={this.toggleDialog}\n            />\n            {filterDialog && (\n              <FilterDialog\n                tabName={this.props.tabName}\n                filterDialog={this.state.filterDialog}\n                toggleDialog={this.toggleDialog}\n              />\n            )}\n          </div>\n        </div>\n        <div className={classes.friendsList}>\n          <FriendsList friendsList={this.state.friendsList}/>\n        </div>\n        {/* <div className={classes.friends}>\n          {friendsList.map(friend => {\n            return (\n              <div>\n                {friend.name}\n              </div>\n            );\n          })}\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(friendsTabStyles)(FriendsTab);\n","/home/rahul/Desktop/projects/GoDutch/src/Components/AddCountryCode.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/GroupsTab.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/FriendsList.js",["163"],"import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst FriendsInDashboardStyles = {\n  friendsList: {\n    padding: \"10px 20px\"\n  },\n  avatar: {\n    width: \"45px !important\",\n    height: \"40px !important\",\n    borderRadius: \"50%\",\n    backgroundImage: `url(\"https://bit.ly/2UhwGb4\")`,\n    border: \"3px solid #00b8a9\",\n    marginRight: \"10px\"\n  },\n  friend: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginTop:\"1rem\"\n  },\n  left: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  FriendName: {\n\n  },\n  right: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n};\n\nclass FriendsInDashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      friends: false\n    };\n  }\n  render() {\n    const { classes, friendsList } = this.props;\n    return (\n        \n      <div className={classes.friendSummary}>\n          {friendsList.map((friend) => {\n              if(friend.balance) {\n                return (\n                  <div className={classes.friend}>\n                  <div className={classes.left}>\n                    <div className={classes.avatar} />\n                    <div className={classes.FriendName}>{friend.name}</div>\n                  </div>\n                  <div className={classes.right}>{friend.balance}</div>\n                </div>\n                )\n              }\n          })}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(FriendsInDashboardStyles)(FriendsInDashboard);\n",["164","165"],"/home/rahul/Desktop/projects/GoDutch/src/Components/AddExpense.js",["166","167"],"/home/rahul/Desktop/projects/GoDutch/src/Components/AddFriend.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/OptionsDialog.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/EditFriendDetails.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/NavBar.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/AddMoreFriends.js",[],["168","169"],"/home/rahul/Desktop/projects/GoDutch/src/Components/AddDetails.js",["170"],"import React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\n\n\nconst addDetailsStyles = {\n    addDetails: {\n      maxWidth: \"600px\"\n    },\n    header: {\n      height: \"40px\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      backgroundColor: \"#eee\"\n    },\n    left: {\n      width: \"30%\",\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    details: {\n      width: \"600px\"\n    },\n    name: {\n      display: \"block\",\n      width: \"100%\"\n    },\n    contact: {\n      display: \"block\",\n      width: \"100%\"\n    },\n    arrow: {\n      cursor: \"pointer\"\n    }\n  };\n  \n  class AddDetails extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        currentFriend: this.props.currentFriend,\n        addBtnDisable: true,\n        isNumber: false,\n        isEmail: false,\n        contactInfo:\n          this.props.currentFriend.email || this.props.currentFriend.number.number\n      };\n    }\n  \n    handleAddBtn = () => {\n      const { isEmail, isNumber } = this.state;\n      if (isEmail) this.props.handleAddMoreFriends(this.state.currentFriend);\n      else if (isNumber) this.props.addCountryCode(this.state.currentFriend);\n      else this.props.toggleWrongInput();\n    };\n  \n    handleName = e => {\n      let name = e.target.value;\n      this.setState(prevState => {\n        return { currentFriend: { ...prevState.currentFriend, name } };\n      }, this.activeAddBtn);\n    };\n  \n    handleContactInfo = e => {\n      let numberRegex = /^[1-9]\\d{7,11}$/;\n      let emailRegex = /^[\\d\\w.!#$%&'*+/=?^_`{|}~-]{1,30}@\\w{1,30}\\.\\w{1,30}/;\n      let contactInfo = e.target.value;\n      if (contactInfo !== \"\") {\n        this.setState(prevState => {\n          return {\n            contactInfo,\n            isEmail: emailRegex.test(contactInfo),\n            isNumber: numberRegex.test(contactInfo)\n          };\n        }, this.updateCurrentFriend);\n      } else\n        this.setState(\n          prevState => ({\n            contactInfo,\n            currentFriend: {\n              ...prevState.currentFriend,\n              number: { country: \"IN\", number: contactInfo },\n              email: contactInfo\n            }\n          }),\n          this.activeAddBtn\n        );\n    };\n  \n    updateCurrentFriend = () => {\n      const { contactInfo } = this.state;\n      if (/^[\\d]+$/g.test(contactInfo))\n        this.setState(prevState => {\n          return {\n            currentFriend: {\n              ...prevState.currentFriend,\n              number: { country: \"IN\", number: contactInfo, dialCode: \"91\" }\n            }\n          };\n        }, this.activeAddBtn);\n      else\n        this.setState(prevState => {\n          return {\n            currentFriend: { ...prevState.currentFriend, email: contactInfo }\n          };\n        }, this.activeAddBtn);\n    };\n  \n    activeAddBtn = () => {\n      const { email, number, name } = this.state.currentFriend;\n      if (!!name && (!!email || !!number.number))\n        this.setState({ addBtnDisable: false });\n      else this.setState({ addBtnDisable: true });\n    };\n  \n    render() {\n      const { classes } = this.props;\n      const { currentFriend, contactInfo } = this.state;\n      return (\n        <Dialog\n          fullScreen={true}\n          open={this.props.addDetailsDialog}\n          aria-labelledby=\"Add New friend Dialog\"\n          aria-describedby=\"Add New friend Dialog\"\n          onBackdropClick={this.props.toggleAddDetails}\n          onEscapeKeyDown={this.props.toggleAddDetails}\n          classes={{ paper: classes.addDetails }}\n        >\n          <div className={classes.header}>\n            <div className={classes.left}>\n              <ArrowBackIcon\n                className={classes.arrow}\n                onClick={this.props.toggleAddDetails}\n              />\n              <Typography variant=\"subtitle1\">Add new contact</Typography>\n            </div>\n            <div className={classes.right}>\n              <Button\n                disabled={this.state.addBtnDisable}\n                onClick={this.handleAddBtn}\n              >\n                ADD\n              </Button>\n            </div>\n          </div>\n          <div className={classes.details}>\n            <form className={classes.friendForm}>\n              <TextField\n                id=\"name-field\"\n                label=\"Name\"\n                className={classes.name}\n                onChange={this.handleName}\n                value={this.state.currentFriend.name}\n              />\n              <TextField\n                id=\"contact-field\"\n                label=\"Phone number or email address\"\n                className={classes.contact}\n                onChange={this.handleContactInfo}\n                value={contactInfo}\n              />\n            </form>\n          </div>\n          <div className=\"message\">\n            Don't worry, nothing sends just yet. You will have another chance to\n            review before sending.\n          </div>\n        </Dialog>\n      );\n    }\n  }\n  \n  export default withStyles(addDetailsStyles)(AddDetails);\n  ",["171","172"],"/home/rahul/Desktop/projects/GoDutch/src/Components/ThreeDotsPopover.js",[],["173","174"],"/home/rahul/Desktop/projects/GoDutch/src/Components/WhoPaidDialog.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/Header.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/ChoosePayer.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/AmountPaidByPerPerson.js",["175"],"import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PaidByWarning from \"./PaidByWarning\";\n\nconst AmountPaidByPerPersonStyles = {\n  dialog: {\n    width: \"400px\",\n    height: \"auto\",\n    display: \"flex\",\n    padding: \"0rem 1rem 2rem 1rem\",\n  },\n  header: {\n    textAlign: \"center\",\n    color: \"#777\",\n    marginTop: \"1rem\",\n  },\n  avatar: {\n    width: \"35px !important\",\n    height: \"35px !important\",\n    borderRadius: \"50%\",\n    backgroundImage: `url(\"https://bit.ly/2UhwGb4\")`,\n    border: \"3px solid #00b8a9\",\n    marginRight: \"10px\",\n  },\n  payer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  payerInfo: {\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: \"0.8rem 0rem\",\n  },\n  shareInfo: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  share: {\n    width: \"3rem\",\n  },\n  currency: {\n    paddingTop: \"0.8rem\",\n    marginRight: \"1rem\",\n  },\n  okay: {\n    margin: \"1rem 1rem 0rem \",\n    color: \"#32CD32\",\n    cursor: \"pointer\",\n    width: \"3rem\",\n    fontWeight: \"bold\",\n  },\n  amountLeft: {\n    textAlign: \"center\",\n  },\n  warning: {\n    color: \"#ffa50a\",\n  },\n};\n\nclass AmountPaidByPerPerson extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      localContributors: this.props.contributors,\n      totalAmount: 0,\n      paidByWarning: false,\n    };\n  }\n  handlePaidValue = (e, payer) => {\n    let amountPaid = e.target.value === \"\" ? 0 : parseFloat(e.target.value);\n    console.log(amountPaid);\n    const { localContributors: contributors } = this.state;\n    let localContributors = contributors.map((contri) =>\n      contri.id === payer.id ? { ...payer, amountPaid } : contri\n    );\n    let totalAmount = localContributors.reduce(\n      (prev, next) => prev + next.amountPaid,\n      0\n    );\n    //console.log(totalAmount);\n    this.setState({ localContributors, totalAmount });\n  };\n  handleExpensePaidShare = (contributors) => {\n    const {expenseAmount} = this.props;\n    const {totalAmount} = this.state;\n    if (expenseAmount !== totalAmount) {\n      this.setState({ paidByWarning: !this.state.paidByWarning });\n    } else {\n      this.props.handleExpensePaidShare(contributors);\n    }\n\n  };\n  togglePaidByWarning = () => {\n    this.setState({ paidByWarning: !this.state.paidByWarning });\n  };\n  render() {\n    const {\n      classes,\n      AmountPaidByPerPersonDialog,\n      toggleAmountPaidByPerPerson,\n      handleExpensePaidShare,\n      expenseAmount,\n    } = this.props;\n    const { localContributors, totalAmount, paidByWarning } = this.state;\n    console.log(this.state.totalAmount);\n    return (\n      <div className={classes.amountPaid}>\n        <Dialog\n          open={AmountPaidByPerPersonDialog}\n          aria-labelledby=\"Amount paid by each person in the expense\"\n          aria-describedby=\"Amount paid by each person in the expense\"\n          onBackdropClick={toggleAmountPaidByPerPerson}\n          onEscapeKeyDown={toggleAmountPaidByPerPerson}\n          classes={{ paper: classes.dialog }}\n        >\n          <div>\n            <div className={classes.header}>Enter each person's share</div>\n            {localContributors.map((payer) => {\n              return (\n                <div key={payer.id} className={classes.payer}>\n                  <div className={classes.payerInfo}>\n                    <div className={classes.avatar}></div>\n                    <div className={classes.name}>{payer.name}</div>\n                  </div>\n                  <div className={classes.shareInfo}>\n                    <div className={classes.currency}>INR</div>\n                    <TextField\n                      onChange={(e) => this.handlePaidValue(e, payer)}\n                      className={classes.share}\n                      type=\"number\"\n                      placeholder=\"0\"\n                      value={payer.amountPaid}\n                    />\n                  </div>\n                </div>\n              );\n            })}\n            <div className={classes.amountLeft}>\n              <div\n                className={\n                  (classes.amountInfo,\n                  expenseAmount - totalAmount < 0 && classes.warning)\n                }\n              >\n                Total: INR {totalAmount ? totalAmount : 0} of INR&nbsp;\n                {expenseAmount ? expenseAmount : 0}\n              </div>\n              <div>\n                INR{\" \"}\n                {totalAmount > 0 ? expenseAmount - totalAmount : expenseAmount}\n                &nbsp; left\n              </div>\n            </div>\n            <div\n              className={classes.okay}\n              onClick={() => this.handleExpensePaidShare(localContributors)}\n            >\n              OK\n            </div>\n          </div>\n          {paidByWarning && (\n            <PaidByWarning\n              paidByWarning={paidByWarning}\n              togglePaidByWarning={this.togglePaidByWarning}\n              expenseAmount={expenseAmount}\n            />\n          )}\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(AmountPaidByPerPersonStyles)(AmountPaidByPerPerson);\n",["176","177"],"/home/rahul/Desktop/projects/GoDutch/src/Components/PerPersonShareDialog.js",["178","179"],"import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { MenuItem, FormControl, Select } from \"@material-ui/core\";\nimport SplitEqually from \"./SplitEqually\";\nimport SplitUnequally from \"./SplitUnequally\";\nimport SplitByPercentage from \"./SplitByPercentage\";\nimport SplitByShare from \"./SplitByShare\";\nimport SplitByAdjustment from \"./SplitByAdjustment\";\n\nconst PerPersonShareDialogStyles = {\n  dialog: {\n    width: \"400px\",\n    height: \"auto\",\n    display: \"flex\",\n    padding: \"0rem 1rem 2rem 1rem\",\n  },\n  header: {\n    textAlign: \"center\",\n    color: \"#777\",\n    margin: \"1rem 0rem\",\n  },\n  formControl: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  selectSplit: {\n    width: \"12rem\",\n  },\n};\n\nclass PerPersonShareDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentSplitMode: \"equally\",\n      equally: true,\n      unequally: false,\n      percentages: false,\n      shares: false,\n      adjustment: false,\n    };\n  }\n  showSplitWindow = (equally, unequally, percentages, shares, adjustment) => {\n    this.setState({\n      equally,\n      unequally,\n      percentages,\n      shares,\n      adjustment,\n    });\n  };\n  handleSplitChnage = (e) => {\n    let currentSplitMode = e.target.value;\n    this.setState({ currentSplitMode });\n    switch (currentSplitMode) {\n      case \"equally\":\n        this.showSplitWindow(true, false, false, false, false);\n        break;\n      case \"unequally\":\n        this.showSplitWindow(false, true, false, false, false);\n        break;\n      case \"percentages\":\n        this.showSplitWindow(false, false, true, false, false);\n        break;\n      case \"shares\":\n        this.showSplitWindow(false, false, false, true, false);\n        break;\n      case \"adjustment\":\n        this.showSplitWindow(false, false, false, false, true);\n        break;\n    }\n  };\n  handleSplit = (perPersonShareList) => {\n    console.log(perPersonShareList)\n    this.props.handleSplit(perPersonShareList);\n  };\n\n  render() {\n    const {\n      classes,\n      perPersonShareDialog,\n      togglePerPersonShareDialog,\n      contributors,\n      expenseAmount,\n    } = this.props;\n    const {} = this.state;\n    console.log(this.state.totalAmount);\n    return (\n      <div className={classes.perPersonShare}>\n        <Dialog\n          open={perPersonShareDialog}\n          aria-labelledby=\"Each person's share in the expense\"\n          aria-describedby=\"Each person's share in the expense\"\n          onBackdropClick={togglePerPersonShareDialog}\n          onEscapeKeyDown={togglePerPersonShareDialog}\n          classes={{ paper: classes.dialog }}\n        >\n          <div className={classes.header}>Enter each person's share</div>\n          <FormControl className={classes.formControl}>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={this.state.currentSplitMode}\n              onChange={this.handleSplitChnage}\n              className={classes.selectSplit}\n            >\n              <MenuItem value={\"equally\"}>Split Equally</MenuItem>\n              <MenuItem value={\"unequally\"}>Split Unequally</MenuItem>\n              <MenuItem value={\"percentages\"}>Split by percentages</MenuItem>\n              <MenuItem value={\"shares\"}>Split by shares</MenuItem>\n              <MenuItem value={\"adjustment\"}>Split by adjustment</MenuItem>\n            </Select>\n          </FormControl>\n          {this.state.equally && (\n            <SplitEqually\n              contributors={contributors}\n              expenseAmount={expenseAmount}\n              handleSplit={this.handleSplit}\n            />\n          )}\n          {this.state.unequally && (\n            <SplitUnequally\n              contributors={contributors}\n              expenseAmount={expenseAmount}\n            />\n          )}\n          {this.state.percentages && (\n            <SplitByPercentage\n              contributors={contributors}\n              expenseAmount={expenseAmount}\n              handleSplit={this.handleSplit}\n            />\n          )}\n          {this.state.shares && (\n            <SplitByShare\n              contributors={contributors}\n              expenseAmount={expenseAmount}\n              handleSplit={this.handleSplit}\n            />\n          )}\n          {this.state.adjustment && (\n            <SplitByAdjustment\n              contributors={contributors}\n              expenseAmount={expenseAmount}\n              handleSplit={this.handleSplit}\n              />\n          )}\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(PerPersonShareDialogStyles)(PerPersonShareDialog);\n","/home/rahul/Desktop/projects/GoDutch/src/Components/SplitEqually.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/PaidByWarning.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/SplitByAdjustment.js",["180"],"/home/rahul/Desktop/projects/GoDutch/src/Components/SplitByShare.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/SplitUnequally.js",[],"/home/rahul/Desktop/projects/GoDutch/src/Components/SplitByPercentage.js",["181"],"import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nconst splitByPercentageStyles = {\n  list: {\n    display: \"flex\",\n    margin: \"1rem 0rem\",\n    justifyContent: \"space-between\",\n  },\n  avatar: {\n    width: \"35px !important\",\n    height: \"35px !important\",\n    borderRadius: \"50%\",\n    backgroundImage: `url(\"https://bit.ly/2UhwGb4\")`,\n    border: \"3px solid #00b8a9\",\n    marginRight: \"10px\",\n  },\n  user: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  percentValue: {\n    width: \"4rem\",\n  },\n  ok: {\n    textAlign: \"right\",\n    margin: \"3rem 1rem 0 0\",\n    color: \"#009900\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\",\n  },\n  total: {\n    textAlign:\"center\",\n    fontSize:\"2rem\"\n  },\n  error: {\n    color: \"#ff7b25\",\n    fontWeight: \"500\",\n  },\n};\n\nclass SplitByPercentage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      percentageShare: {},\n      total: 0.0,\n      error: false,\n    };\n  }\n\n  handlePercentageShare = (id) => (e) => {\n    let { percentageShare } = this.state;\n    let currentVal = parseInt(e.target.value !== \"NaN\" ? e.target.value : \"\");\n    let upadatedPercentageShare = { ...percentageShare, [id]: currentVal };\n    const keys = Object.keys(percentageShare);\n\n    let total = 0;\n    keys.forEach((key) => {\n      total += upadatedPercentageShare[key] !== \"NaN\" ? upadatedPercentageShare[key] : 0;\n    });\n    console.log(total);\n    if (total > 100) {\n      this.setState({\n        percentageShare: upadatedPercentageShare,\n        total,\n        error: true,\n      });\n    } else {\n      this.setState({ \n        percentageShare: upadatedPercentageShare,\n        total,\n        error: false,\n      });\n    }\n  };\n\n  handleExpenseSplit = () => {\n    const { percentageShare, total } = this.state;\n    const {expenseAmount, contributors} = this.props;\nif(total === 100) {\nlet contributorsUpdated = contributors.map((person) => {\n let expenseShare = (percentageShare[person.id]*expenseAmount)/100\n  return {...person, expenseShare }\n})\nconsole.log(contributorsUpdated)\nthis.props.handleSplit(contributorsUpdated)\n\n}\nelse {\nconsole.log(\"expense doesn't match up\");\n}\n  }\n\n  render() {\n    const { classes, contributors } = this.props;\n    const { percentageShare, total, error } = this.state;\n    return (\n      <div className={classes.splitUnequally}>\n        {contributors.map((contributor, i) => {\n          let { id, name } = contributor;\n          return (\n            <div className={classes.list} key={id}>\n              <div className={classes.user}>\n                <div className={classes.avatar}></div>\n                <div className={classes.name}>{name}</div>\n              </div>\n              <div>\n                <TextField\n                  id=\"description\"\n                  className={classes.percentValue}\n                  placeholder=\"0\"\n                  type=\"number\"\n                  value={percentageShare[id] || \"\"}\n                  onChange={this.handlePercentageShare(id)}\n                  required\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">%</InputAdornment>\n                    ),\n                  }}\n                />\n              </div>\n            </div>\n          );\n        })}\n        <div className={classes.total, error ? classes.error : undefined}>Total:{total}% of 100%</div>\n        <div>{100 - total}% left</div>\n        <div className={classes.ok} onClick={this.handleExpenseSplit}>\n          OK\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(splitByPercentageStyles)(SplitByPercentage);\n",{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":149,"column":5,"nodeType":"188","messageId":"189","endLine":162,"endColumn":6},{"ruleId":"186","severity":1,"message":"187","line":316,"column":5,"nodeType":"188","messageId":"189","endLine":338,"endColumn":6},{"ruleId":"182","replacedBy":"190"},{"ruleId":"184","replacedBy":"191"},{"ruleId":"182","replacedBy":"192"},{"ruleId":"184","replacedBy":"193"},{"ruleId":"182","replacedBy":"194"},{"ruleId":"184","replacedBy":"195"},{"ruleId":"182","replacedBy":"196"},{"ruleId":"184","replacedBy":"197"},{"ruleId":"182","replacedBy":"198"},{"ruleId":"184","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":71,"column":12,"nodeType":"202","messageId":"203","endLine":71,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":46,"column":37,"nodeType":"206","messageId":"207","endLine":46,"endColumn":39},{"ruleId":"182","replacedBy":"208"},{"ruleId":"184","replacedBy":"209"},{"ruleId":"200","severity":1,"message":"210","line":261,"column":7,"nodeType":"202","messageId":"203","endLine":261,"endColumn":18},{"ruleId":"211","severity":1,"message":"212","line":399,"column":1,"nodeType":"213","messageId":"214","endLine":526,"endColumn":2},{"ruleId":"182","replacedBy":"215"},{"ruleId":"184","replacedBy":"216"},{"ruleId":"200","severity":1,"message":"217","line":125,"column":15,"nodeType":"202","messageId":"203","endLine":125,"endColumn":28},{"ruleId":"182","replacedBy":"218"},{"ruleId":"184","replacedBy":"219"},{"ruleId":"182","replacedBy":"220"},{"ruleId":"184","replacedBy":"221"},{"ruleId":"200","severity":1,"message":"222","line":103,"column":7,"nodeType":"202","messageId":"203","endLine":103,"endColumn":29},{"ruleId":"182","replacedBy":"223"},{"ruleId":"184","replacedBy":"224"},{"ruleId":"186","severity":1,"message":"187","line":56,"column":5,"nodeType":"188","messageId":"189","endLine":72,"endColumn":6},{"ruleId":"225","severity":1,"message":"226","line":87,"column":11,"nodeType":"227","messageId":"228","endLine":87,"endColumn":13},{"ruleId":"200","severity":1,"message":"229","line":53,"column":10,"nodeType":"202","messageId":"203","endLine":53,"endColumn":28},{"ruleId":"230","severity":1,"message":"231","line":129,"column":38,"nodeType":"232","messageId":"233","endLine":129,"endColumn":39},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["234"],["235"],["234"],["235"],["234"],["235"],["234"],["235"],["234"],["235"],"no-unused-vars","'friendsList' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["234"],["235"],"'moreOptions' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["234"],["235"],"'currentFriend' is assigned a value but never used.",["234"],["235"],["234"],["235"],"'handleExpensePaidShare' is assigned a value but never used.",["234"],["235"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'SplitByAdjustment1' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]